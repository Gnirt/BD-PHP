<?php
// insert.php for bdphp insert in /Users/Gato/Documents/ETNA/projets/BDPHP_Nov_2013/olivie_c
// 
// Made by OLIVIER Cedric
// Login   <olivie_c@etna-alternance.net>
// 
// Started on  Tue Nov 19 13:38:39 2013 OLIVIER Cedric
// Last update Thu Nov 21 15:37:19 2013 OLIVIER Cedric
//
function func_insert($arr)
{
  $arr = implode(" ", $arr);
  if (!preg_match_all("/insert (\w+)\s*\((.+)\)\s*/", $arr, $match))
    write("error syntax for insert");
  else
    {
      $table_name = $match[1][0];
      if(table_exists($table_name))
	insert_data($table_name, $match[2][0]);
      else
	write("Table $table_name doesn't exists!");
    }
}
function insert_data($t_name, $arr)
{
  global $database;
  $p_table = get_format_table($t_name);
  $arr = explode(",", $arr);
  $arr = get_insert_tab($arr, $p_table);
  if (is_array($arr))
    {
      $str = "\n";
      foreach ($arr as $value)
	$str .= "$value;";
      $str = substr($str,0, -1);
      $handle = fopen("$database/".$t_name.".csv", "a+");
      fwrite($handle, $str);
      fclose($handle);
      write("-> Insert done.");
    }
}
function get_insert_tab($arr, $p_table)
{
  $tmp = array();
  for ($i = 0;  $i < count($arr) ; $i++)
    {
      $tab = explode("=", $arr[$i]);
      if (isset($tab[0]) && isset($tab[1]))
	{
	  $key =  preg_replace('/\s+/', ' ', strtolower(trim($tab[0])));
	  $data =  preg_replace('/\s+/', ' ', strtolower(trim($tab[1])));
	  $tmp[$key] = $data;
	}
	else
	{
	  $err = preg_replace('/\s+/', ' ', strtolower(trim($arr[$i])));
	  write("Error: Syntaxe error '" . $err . "'");
	}
    }
  if (check_type_values($tmp, $p_table))
    return $tmp;
}
function check_type_values($arr, $p_table)
{

  for ($i = 0; $i < count($p_table) ; $i++)
    {
      $see = false;
      foreach ($arr as $key => $value)
	if ($key == $p_table[$i]['var'])
	  $see = true;
      if (!$see)
	{
	  write("Error: Column name doesnâ€™t exists");
	  return (false);
	}
      else
	{
	  if ($p_table[$i]['type'] != my_get_type($value) && ($p_table[$i]['type'] != 'string'))
	    {
	      echo $p_table[$i]['type']." != ".my_get_type($value)." (value = $value)&& (".$p_table[$i]['type']." != 'string')\n\n";
	      write("error: " . $p_table[$i]['var'] . " must be a " . $p_table[$i]['type']);
	      return false;
	    }
	}
    }
  return true;
}
function my_get_type($str)
{
  if (is_numeric($str))
    if (preg_match("#[.,]{1}#", $str))
      return "float";
    else
      return "integer";
  else
    if ($str == "true" || $str == "false")
      return "bool";
    else
      return "string";
}